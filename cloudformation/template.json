{
    "Parameters" : {
        "JWTSecret" : {
            "Type": "String",
            "NoEcho": true
        }
    },
    "Resources": {
        "DynamoDBTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
                "TableName": {
                    "Fn::Join": ["-", [{ "Ref": "AWS::StackName" }, "data"]]
                },
                "BillingMode": "PAY_PER_REQUEST",
                "AttributeDefinitions": [
                    {
                        "AttributeName": "partition",
                        "AttributeType": "S"
                    },
                    {
                        "AttributeName": "sort",
                        "AttributeType": "S"
                    },
                    {
                        "AttributeName": "indexedDomain",
                        "AttributeType": "S"
                    },
                    {
                        "AttributeName": "morton",
                        "AttributeType": "N"
                    }
                ],
                "KeySchema": [
                    {
                        "AttributeName": "partition",
                        "KeyType": "HASH"
                    },
                    {
                        "AttributeName": "sort",
                        "KeyType": "RANGE"
                    }
                ],
                "GlobalSecondaryIndexes": [
                    {
                        "IndexName": "QueryByZoom",
                        "KeySchema": [
                            {
                                "AttributeName": "indexedDomain",
                                "KeyType": "HASH"
                            },
                            {
                                "AttributeName": "morton",
                                "KeyType": "RANGE"
                            }
                        ],
                        "Projection": {
                            "ProjectionType": "ALL"
                        }
                    }
                ]
            }
        },
        "WebsiteBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
                "BucketName": { "Fn::Sub": "${AWS::AccountId}-${AWS::StackName}-website" }
            }
        },
        "WebsiteBucketPolicy": {
            "Type" : "AWS::S3::BucketPolicy",
            "Properties" : {
                "Bucket" : { "Ref": "WebsiteBucket" },
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": {
                        "Sid": "AllowCloudFrontServicePrincipalReadOnly",
                        "Effect": "Allow",
                        "Principal": {
                            "Service": "cloudfront.amazonaws.com"
                        },
                        "Action": "s3:GetObject",
                        "Resource": { "Fn::Sub": "arn:aws:s3:::${WebsiteBucket}/*" },
                        "Condition": {
                            "StringEquals": {
                                "AWS:SourceArn": {
                                    "Fn::Sub": "arn:aws:cloudfront::${AWS::AccountId}:distribution/${CloudfrontDistro}"
                                }
                            }
                        }
                    }
                }
            }
        },
        "LambdaHandler": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Role": { "Fn::GetAtt": ["LambdaHandlerRole", "Arn"] },
                "Handler": "index.handler",
                "Code": {
                    "ZipFile": "module.exports = { handler: function() { return 'hello world'; } }"
                },
                "Runtime": "nodejs20.x",
                "Environment": {
                    "Variables": {
                        "DYNAMODB_TABLE_NAME": { "Ref": "DynamoDBTable" },
                        "APP_URI": "",
                        "JWT_SECRET": { "Ref": "JWTSecret" }
                    }
                }
            }
        },
        "LambdaHandlerURL": {
            "Type": "AWS::Lambda::Url",
            "Properties": {
                "AuthType": "NONE",
                "TargetFunctionArn": { "Ref": "LambdaHandler" },
                "Cors": {
                    "AllowMethods": ["GET"],
                    "AllowOrigins": ["*"]
                }
            }
        },
        "LambdaHandlerPermission": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:InvokeFunctionUrl",
                "FunctionName": { "Ref": "LambdaHandler" },
                "FunctionUrlAuthType": "NONE",
                "Principal": "*"
            }
        },
        "LambdaHandlerRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "lambda.amazonaws.com"
                            },
                            "Action": "sts:AssumeRole"
                        }
                    ]
                },
                "Policies": [
                    {
                        "PolicyName": "AllowDynamoRead",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "logs:CreateLogGroup",
                                        "logs:CreateLogStream",
                                        "logs:PutLogEvents"
                                    ],
                                    "Resource": "*"
                                },
                                {
                                    "Sid": "DynamoReadAccess",
                                    "Effect": "Allow",
                                    "Action": [
                                        "dynamodb:BatchGetItem",
                                        "dynamodb:GetItem",
                                        "dynamodb:Query"
                                    ],
                                    "Resource": {
                                        "Fn::Sub": "arn:${AWS::Partition}:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${DynamoDBTable}*"
                                    }
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "WebsiteCachePolicy": {
            "Type" : "AWS::CloudFront::CachePolicy",
            "Properties" : {
                "CachePolicyConfig": {
                    "DefaultTTL" : "5",
                    "MaxTTL" : "30",
                    "MinTTL" : "0",
                    "Name": { "Fn::Sub": "${AWS::StackName}-S3-Origin"},
                    "ParametersInCacheKeyAndForwardedToOrigin": {
                        "EnableAcceptEncodingBrotli": true,
                        "EnableAcceptEncodingGzip": true,
                        "CookiesConfig" : {
                            "CookieBehavior": "none"
                        },
                        "HeadersConfig" : {
                            "HeaderBehavior": "none"
                        },
                        "QueryStringsConfig": {
                            "QueryStringBehavior": "none"
                        }
                    }
                }
            }
        },
        "WebsiteRequestPolicy": {
            "Type" : "AWS::CloudFront::OriginRequestPolicy",
            "Properties" : {
                "OriginRequestPolicyConfig": {
                    "Name": { "Fn::Sub": "${AWS::StackName}-S3-Origin"},
                    "CookiesConfig": {
                        "CookieBehavior": "none"
                    },
                    "HeadersConfig": {
                        "HeaderBehavior": "none"
                    },
                    "QueryStringsConfig": {
                        "QueryStringBehavior": "none"
                    }
                }
            }
        },
        "StaticWebsiteAccessControl": {
            "Type" : "AWS::CloudFront::OriginAccessControl",
            "Properties" : {
                "OriginAccessControlConfig":{
                    "Name" : { "Ref": "AWS::StackName" },
                    "OriginAccessControlOriginType": "s3",
                    "SigningBehavior" : "always",
                    "SigningProtocol" : "sigv4"
                }
            }
        },
        "LambdaCachePolicy": {
            "Type" : "AWS::CloudFront::CachePolicy",
            "Properties" : {
                "CachePolicyConfig": {
                    "DefaultTTL" : "0",
                    "MaxTTL" : "10",
                    "MinTTL" : "0",
                    "Name": { "Fn::Sub": "${AWS::StackName}-Lambda-Origin"},
                    "ParametersInCacheKeyAndForwardedToOrigin": {
                        "EnableAcceptEncodingBrotli": true,
                        "EnableAcceptEncodingGzip": true,
                        "CookiesConfig" : {
                            "CookieBehavior": "none"
                        },
                        "HeadersConfig" : {
                            "HeaderBehavior": "none"
                        },
                        "QueryStringsConfig": {
                            "QueryStringBehavior": "all"
                        }
                    }
                }
            }
        },
        "LambdaRequestPolicy": {
            "Type" : "AWS::CloudFront::OriginRequestPolicy",
            "Properties" : {
                "OriginRequestPolicyConfig": {
                    "Name": { "Fn::Sub": "${AWS::StackName}-Lambda-Origin"},
                    "CookiesConfig": {
                        "CookieBehavior": "whitelist",
                        "Cookies": ["auth"]
                    },
                    "HeadersConfig": {
                        "HeaderBehavior": "none"
                    },
                    "QueryStringsConfig": {
                        "QueryStringBehavior": "all"
                    }
                }
            }
        },
        "CloudfrontDistro": {
            "Type": "AWS::CloudFront::Distribution",
            "Properties": {
                "DistributionConfig": {
                    "Comment": { "Ref": "AWS::StackName" },
                    "Enabled": true,
                    "PriceClass": "PriceClass_100",
                    "Origins": [
                        {
                            "Id": "LambdaBackend",
                            "DomainName": {
                                "Fn::Select": [
                                    2,
                                    {
                                        "Fn::Split": [
                                            "/",
                                            { "Fn::GetAtt": ["LambdaHandlerURL", "FunctionUrl"] }
                                        ]
                                    }
                                ]
                            },
                            "CustomOriginConfig": {
                                "OriginProtocolPolicy": "https-only"
                            }
                        },
                        {
                            "Id": "StaticWebsite",
                            "OriginAccessControlId": {
                                "Fn::Sub": "${StaticWebsiteAccessControl.Id}"
                            },
                            "DomainName": {
                                "Fn::Sub": "${WebsiteBucket}.s3.${AWS::Region}.amazonaws.com"
                            },
                            "S3OriginConfig": {
                                "OriginAccessIdentity": ""
                            }
                        }
                    ],
                    "DefaultCacheBehavior": {
                        "AllowedMethods": ["GET", "HEAD", "OPTIONS"],
                        "Compress": true,
                        "TargetOriginId": "StaticWebsite",
                        "ViewerProtocolPolicy": "redirect-to-https",
                        "CachePolicyId":  { "Ref": "WebsiteCachePolicy" },
                        "OriginRequestPolicyId": { "Ref": "WebsiteRequestPolicy" }
                    },
                    "DefaultRootObject": "index.html",
                    "CacheBehaviors": [
                        {
                            "AllowedMethods": ["HEAD", "DELETE", "POST", "GET", "OPTIONS", "PUT", "PATCH"],
                            "Compress": true,
                            "PathPattern": "/app/*",
                            "TargetOriginId": "LambdaBackend",
                            "ViewerProtocolPolicy": "redirect-to-https",
                            "CachePolicyId":  { "Ref": "LambdaCachePolicy" },
                            "OriginRequestPolicyId": { "Ref": "LambdaRequestPolicy" }
                        }
                    ],
                    "HttpVersion": "http2and3"
                }
            }
        }
    },
    "Outputs": {
        "LambdaHandlerArn": {
            "Description": "Information about the value",
            "Value": { "Fn::GetAtt": ["LambdaHandler", "Arn"] }
        },
        "WebsiteBucket": {
            "Description": "S3 Bucket used for static website files",
            "Value": { "Ref": "WebsiteBucket" }
        }
    }
}
